package com.luislarghi
{
	import flash.geom.Point;

	public final class R
	{
		//Map tiles
		public static const TILE_WIDTH:int = 128;
		public static const TILE_HEIGHT:int = 64;
		
		[Embed(source="images/cesped.png")] public static const BG_Cesped:Class;
		[Embed(source="images/north-south_carretera.png")] public static const BG_nsStreet:Class;
		[Embed(source="images/east-west_carretera.png")] public static const BG_ewStreet:Class;
		[Embed(source="images/blank_carretera.png")] public static const BG_blankStreet:Class;
		[Embed(source="images/arboles.png")] public static const BG_Arboles:Class;
		[Embed(source="images/blank_acera.png")] public static const BG_Sidewalk:Class;
		[Embed(source="images/casa1.png")] public static const BG_Casa1:Class;
		[Embed(source="images/casa2.png")] public static const BG_Casa2:Class;
		[Embed(source="images/east_corner-tall-building.png")] public static const BG_Casa3:Class;
		
		/* ********
		0 - Blank
		1 - Cesped
		2 - Carretera Norte-Sur
		3 - Carretera Este-Oeste
		4 - Carretera vacia
		5 - Arboles
		6 - Acera
		7 - Casa 1
		8 - Casa 2
		9 - Casa 3
		******** */
		
		public static const TILE_BLANK:int = 0;
		public static const TILE_GRASS:int = 1;
		public static const TILE_STREET_H:int = 2;
		public static const TILE_STREET_V:int = 3;
		public static const TILE_STREET_B:int = 4;
		public static const TILE_TREES:int = 5;
		public static const TILE_SIDEW:int = 6;
		public static const TILE_HOUSE_1:int = 7;
		public static const TILE_HOUSE_2:int = 8;
		public static const TILE_HOUSE_3:int = 9;
		
		//Map array
		public static const TM_Stage1:Array = new Array([TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES],
														[TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_GRASS, TILE_TREES, TILE_GRASS, TILE_TREES],
														[TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES, TILE_TREES]);
		
		public static const TG_NOCKDOOR:int = 1;
		public static const TG_EXIT:int = 2;
		
		//Trigger Array
		public static const TG_Stage1:Array = new Array([TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TG_EXIT, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK],
														[TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK, TILE_BLANK]);
		
		//GUI SpriteSheets
		[Embed(source="images/spriteSheet_GUI.png")] public static const GUI:Class;
		
		//Character SpriteSheets
		public static const SS_WIDTH:int = 128;
		public static const SS_HEIGHT:int = 128;
		[Embed(source="images/petra.png")] public static const SS_Petra:Class;
		
		// Helper Functions
		
		public static function Screen2Map(screen:Point):Point
		{
			var map:Point = new Point();
			map.x = (screen.x / (R.TILE_WIDTH / 2) + screen.y / (R.TILE_HEIGHT / 2)) /2;
			map.y = (screen.y / (R.TILE_HEIGHT / 2) -(screen.x / (R.TILE_WIDTH / 2))) /2;
			return map;
		}
		
		public static function Map2Screen(map:Point):Point
		{
			var screen:Point = new Point();
			screen.x = (map.x - map.y) * (R.TILE_WIDTH / 2)
			screen.y = (map.x + map.y) * (R.TILE_HEIGHT / 2);
			return screen;
		}
	}
}